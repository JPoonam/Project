//!
//! @file INPersistentObject.h
//!
//! @author Alexander Babaev (alex.babaev@me.com)
//! @version 1.0
//! @date 2010
//! 
//! Copyright 2010 InRu
//! 
//! Licensed under the Apache License, Version 2.0 (the "License");
//! you may not use this file except in compliance with the License.
//! You may obtain a copy of the License at
//! 
//!     http://www.apache.org/licenses/LICENSE-2.0
//! 
//! Unless required by applicable law or agreed to in writing, software
//! distributed under the License is distributed on an "AS IS" BASIS,
//! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//! See the License for the specific language governing permissions and
//! limitations under the License.
//!

#import <Foundation/Foundation.h>

@class INPersistentObject;

#import "INPersistentStorage.h"

/**
 @brief Object, that partially is stored in files, partially in SQLite.
 
 These kind of objects are good when we want to create fast in-memory model for UITableView,
 but objects in that table contain large ivars (such as detail texts that has to be shown in 
 detail views).
 
 When you override this object, you have to create ivars only for properties that are needed 
 in "table view". For each of "large" ivars you have to create \@dynamic property, but no ivar is needed.
 
 Every file-stored ivar also needs a property, but a \@synthesized one. So, you have to get something like:
 
<code>
\@interface TestObject : INPersistentObject {\n
    int valueInt;\n
}\n
\@property int valueInt;\n
\@property NSString* dynamicValueInt;\n
\@end\n
\n
\@implementation TestObject\n
\@synthesize valueInt;\n
\@dynamic dynamicValueInt;\n
\@end
</code>
 
 */
@interface INPersistentObject : NSObject {
@private
	// Inner field. Is needed for autogenerated getters and setters.
	INPersistentStorage *_storage;
	
	// Inner field that holds id for dynamic properties loading.
	int64_t ___id;
	
	// Inner field. Stores cached dynamic variables.
	NSMutableDictionary *_dynamicValues;
}

@end
